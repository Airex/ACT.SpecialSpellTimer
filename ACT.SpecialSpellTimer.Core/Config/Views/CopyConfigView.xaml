<Window
  x:Class="ACT.SpecialSpellTimer.Config.Views.CopyConfigView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:fwcmn="clr-namespace:FFXIV.Framework.Common;assembly=FFXIV.Framework"
  xmlns:fwcnv="clr-namespace:FFXIV.Framework.WPF.Converters;assembly=FFXIV.Framework"
  xmlns:global="clr-namespace:FFXIV.Framework.Globalization;assembly=FFXIV.Framework"
  xmlns:local="clr-namespace:ACT.SpecialSpellTimer.Config.Views"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:model="clr-namespace:ACT.SpecialSpellTimer.Config.Models"
  xmlns:triggerModel="clr-namespace:ACT.SpecialSpellTimer.Models"
  xmlns:resources="clr-namespace:ACT.SpecialSpellTimer.resources"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
  xmlns:vm="clr-namespace:ACT.SpecialSpellTimer.Config.ViewModels"
  xmlns:fa="http://schemas.fontawesome.io/icons/"
  d:DataContext="{d:DesignInstance Type=local:CopyConfigView}"
  DataContext="{Binding RelativeSource={RelativeSource Self}}"
  Background="Transparent"
  FontFamily="Consolas, Yu Gothic UI, Meiryo UI"
  FontSize="17"
  RenderOptions.BitmapScalingMode="HighQuality"
  RenderOptions.ClearTypeHint="Enabled"
  RenderOptions.EdgeMode="Unspecified"
  TextOptions.TextFormattingMode="Display"
  TextOptions.TextHintingMode="Animated"
  TextOptions.TextRenderingMode="ClearType"
  mc:Ignorable="d"
  WindowStyle="None"
  ResizeMode="CanResizeWithGrip"
  AllowsTransparency="True"
  ShowInTaskbar="True"
  Title="Browse Icon..."
  SizeToContent="Width"
  Height="480">

  <Window.Resources>
    <ResourceDictionary>
      <Style TargetType="Label">
        <Setter Property="Padding" Value="0" />
      </Style>

      <Style TargetType="CheckBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
      </Style>

      <Style TargetType="TextBox">
        <Style.Triggers>
          <Trigger Property="IsReadOnly" Value="True">
            <Setter Property="Foreground" Value="Silver" />
          </Trigger>
        </Style.Triggers>
      </Style>

      <FontFamily x:Key="FontAwesome">pack://application:,,,/FontAwesome.WPF;component/#FontAwesome</FontFamily>

      <fwcnv:BoolToCollapsedConverter x:Key="VisibilityConverter" />
      <fwcnv:BoolToHiddenConverter x:Key="HiddenConverter" />

      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../resources/strings/Strings.ja-JP.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Window.Resources>

  <Border
    CornerRadius="8"
    BorderBrush="Maroon"
    BorderThickness="3"
    Background="White">

    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <!-- ヘッダエリア -->
      <DockPanel Grid.Row="0">
        <Label DockPanel.Dock="Left" Content="{DynamicResource Copy_Title}" Margin="5" />
        <Button DockPanel.Dock="Right" x:Name="CloseButton" Content="❌" HorizontalAlignment="Right" MinWidth="30" BorderBrush="Transparent" Background="Transparent" />
      </DockPanel>

      <!-- ボタンエリア -->
      <StackPanel Grid.Row="2" Orientation="Vertical">
        <Button x:Name="ApplyButton" Content="{DynamicResource Common_Apply}" HorizontalContentAlignment="Right" Background="Transparent" BorderBrush="Transparent" Margin="5" HorizontalAlignment="Right" />
      </StackPanel>

      <!-- コンテンツエリア -->
      <Grid Grid.Row="1" Margin="5 10 5 10">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">
          <StackPanel  Orientation="Vertical">
            <Label Content="{DynamicResource Copy_Source}" FontSize="18" />
            <Label Margin="5 2 0 0" Content="{Binding SourceName, Mode=OneWay}" FontSize="21" FontWeight="Bold" />
          </StackPanel>

          <WrapPanel Margin="0 45 5 0" Orientation="Vertical">
            <!-- フォント -->
            <StackPanel Margin="0 20 50 0">
              <Label Content="{DynamicResource Common_Font}" FontSize="18" FontWeight="Bold" />
              <StackPanel Margin="10 5 0 0">
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_Font}" IsChecked="{Binding CopyFont, Mode=TwoWay}" />
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_FillColor}" IsChecked="{Binding CopyFontFill, Mode=TwoWay}" />
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_StrokeColor}" IsChecked="{Binding CopyFontStrokke, Mode=TwoWay}" />
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_WarningFillColor}" IsChecked="{Binding CopyFontWarningFill, Mode=TwoWay}" Visibility="{Binding IsSpell, Mode=OneWay, Converter={StaticResource VisibilityConverter}}" />
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_WarningStrokeColor}" IsChecked="{Binding CopyFontWarningStroke, Mode=TwoWay}" Visibility="{Binding IsSpell, Mode=OneWay, Converter={StaticResource VisibilityConverter}}" />
              </StackPanel>
            </StackPanel>

            <!-- プログレスバー -->
            <StackPanel Margin="0 20 50 0" Visibility="{Binding IsSpell, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
              <Label Content="{DynamicResource Common_ProgressBar}" FontSize="18" FontWeight="Bold" />
              <StackPanel Margin="10 5 0 0">
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_Size}" IsChecked="{Binding CopyProgressBarSize, Mode=TwoWay}" />
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_FillColor}" IsChecked="{Binding CopyProgressBarFill, Mode=TwoWay}" />
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_StrokeColor}" IsChecked="{Binding CopyProgressBarStroke, Mode=TwoWay}" />
              </StackPanel>
            </StackPanel>

            <!-- 背景-->
            <StackPanel Margin="0 20 50 0">
              <Label Content="{DynamicResource Common_Background}" FontSize="18" FontWeight="Bold" />
              <StackPanel Margin="10 5 0 0">
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_FillColor}" IsChecked="{Binding CopyBackground, Mode=TwoWay}" />
              </StackPanel>
            </StackPanel>

            <!-- アイコン -->
            <StackPanel Margin="0 20 50 0" Visibility="{Binding IsSpell, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
              <Label Content="{DynamicResource Common_Icon}" FontSize="18" FontWeight="Bold" />
              <StackPanel Margin="10 5 0 0">
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_Size}" IsChecked="{Binding CopyIconSize, Mode=TwoWay}" />
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_RecastTimeOverIcon}" IsChecked="{Binding CopyIconOverlapRecastTime, Mode=TwoWay}" />
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_ToDarkBetweenRecast}" IsChecked="{Binding CopyIconToDarkness, Mode=TwoWay}" />
                <CheckBox Margin="0 3 0 0" Content="{DynamicResource Common_HideSpellName}" IsChecked="{Binding CopyIconHideSpellName, Mode=TwoWay}" />
              </StackPanel>
            </StackPanel>

            <!-- 位置 -->
            <StackPanel Margin="0 20 50 0" Visibility="{Binding IsTicker, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
              <Label Content="{DynamicResource Common_Location}" FontSize="18" FontWeight="Bold" />
              <StackPanel Margin="10 5 0 0" Orientation="Horizontal">
                <CheckBox Margin="0 3 0 0" Content="X" IsChecked="{Binding CopyX, Mode=TwoWay}" />
                <CheckBox Margin="15 3 0 0" Content="Y" IsChecked="{Binding CopyY, Mode=TwoWay}" />
              </StackPanel>
            </StackPanel>
          </WrapPanel>
        </Grid>

        <!-- Copy先 -->
        <Grid Grid.Column="1">
          <Label Content="{DynamicResource Copy_Destination}" FontSize="18" />
          <ListView
            BorderThickness="0"
            Margin="15 28 6 0"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.VirtualizationMode="Recycling"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ScrollViewer.VerticalScrollBarVisibility="Auto"
            ItemsSource="{Binding Dests, Mode=OneWay}">
            <ListView.ItemContainerStyle>
              <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
              </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
              <DataTemplate>
                <CheckBox Margin="0 3 20 3" Content="{Binding Text}" IsChecked="{Binding ToCopy, Mode=TwoWay}" />
              </DataTemplate>
            </ListView.ItemTemplate>
          </ListView>
        </Grid>
        <!-- Copy先 end -->
      </Grid>
      <!-- コンテンツエリア end -->
    </Grid>
    <!-- base grid end -->
  </Border>
</Window>
