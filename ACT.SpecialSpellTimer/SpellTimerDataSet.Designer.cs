//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.34014
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ACT.SpecialSpellTimer {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SpellTimerDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SpellTimerDataSet : global::System.Data.DataSet {
        
        private SpellTimerDataTable tableSpellTimer;
        
        private PanelSettingsDataTable tablePanelSettings;
        
        private OnePointTelopDataTable tableOnePointTelop;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SpellTimerDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected SpellTimerDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SpellTimer"] != null)) {
                    base.Tables.Add(new SpellTimerDataTable(ds.Tables["SpellTimer"]));
                }
                if ((ds.Tables["PanelSettings"] != null)) {
                    base.Tables.Add(new PanelSettingsDataTable(ds.Tables["PanelSettings"]));
                }
                if ((ds.Tables["OnePointTelop"] != null)) {
                    base.Tables.Add(new OnePointTelopDataTable(ds.Tables["OnePointTelop"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SpellTimerDataTable SpellTimer {
            get {
                return this.tableSpellTimer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PanelSettingsDataTable PanelSettings {
            get {
                return this.tablePanelSettings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OnePointTelopDataTable OnePointTelop {
            get {
                return this.tableOnePointTelop;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SpellTimerDataSet cln = ((SpellTimerDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SpellTimer"] != null)) {
                    base.Tables.Add(new SpellTimerDataTable(ds.Tables["SpellTimer"]));
                }
                if ((ds.Tables["PanelSettings"] != null)) {
                    base.Tables.Add(new PanelSettingsDataTable(ds.Tables["PanelSettings"]));
                }
                if ((ds.Tables["OnePointTelop"] != null)) {
                    base.Tables.Add(new OnePointTelopDataTable(ds.Tables["OnePointTelop"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSpellTimer = ((SpellTimerDataTable)(base.Tables["SpellTimer"]));
            if ((initTable == true)) {
                if ((this.tableSpellTimer != null)) {
                    this.tableSpellTimer.InitVars();
                }
            }
            this.tablePanelSettings = ((PanelSettingsDataTable)(base.Tables["PanelSettings"]));
            if ((initTable == true)) {
                if ((this.tablePanelSettings != null)) {
                    this.tablePanelSettings.InitVars();
                }
            }
            this.tableOnePointTelop = ((OnePointTelopDataTable)(base.Tables["OnePointTelop"]));
            if ((initTable == true)) {
                if ((this.tableOnePointTelop != null)) {
                    this.tableOnePointTelop.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SpellTimerDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SpellTimerDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSpellTimer = new SpellTimerDataTable();
            base.Tables.Add(this.tableSpellTimer);
            this.tablePanelSettings = new PanelSettingsDataTable();
            base.Tables.Add(this.tablePanelSettings);
            this.tableOnePointTelop = new OnePointTelopDataTable();
            base.Tables.Add(this.tableOnePointTelop);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSpellTimer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePanelSettings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOnePointTelop() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SpellTimerDataSet ds = new SpellTimerDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SpellTimerRowChangeEventHandler(object sender, SpellTimerRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PanelSettingsRowChangeEventHandler(object sender, PanelSettingsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OnePointTelopRowChangeEventHandler(object sender, OnePointTelopRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SpellTimerDataTable : global::System.Data.TypedTableBase<SpellTimerRow> {
            
            private global::System.Data.DataColumn columnPanel;
            
            private global::System.Data.DataColumn columnSpellTitle;
            
            private global::System.Data.DataColumn columnKeyword;
            
            private global::System.Data.DataColumn columnRecastTime;
            
            private global::System.Data.DataColumn columnRepeatEnabled;
            
            private global::System.Data.DataColumn columnProgressBarVisible;
            
            private global::System.Data.DataColumn columnMatchSound;
            
            private global::System.Data.DataColumn columnMatchTextToSpeak;
            
            private global::System.Data.DataColumn columnOverSound;
            
            private global::System.Data.DataColumn columnOverTextToSpeak;
            
            private global::System.Data.DataColumn columnOverTime;
            
            private global::System.Data.DataColumn columnTimeupSound;
            
            private global::System.Data.DataColumn columnTimeupTextToSpeak;
            
            private global::System.Data.DataColumn columnMatchDateTime;
            
            private global::System.Data.DataColumn columnOverDone;
            
            private global::System.Data.DataColumn columnTimeupDone;
            
            private global::System.Data.DataColumn columnTimeupHide;
            
            private global::System.Data.DataColumn columnIsReverse;
            
            private global::System.Data.DataColumn columnFontColor;
            
            private global::System.Data.DataColumn columnBarColor;
            
            private global::System.Data.DataColumn columnDontHide;
            
            private global::System.Data.DataColumn columnSpellTitleReplaced;
            
            private global::System.Data.DataColumn columnMatchedLog;
            
            private global::System.Data.DataColumn columnDisplayNo;
            
            private global::System.Data.DataColumn columnRegex;
            
            private global::System.Data.DataColumn columnRegexPattern;
            
            private global::System.Data.DataColumn columnRegexEnabled;
            
            private global::System.Data.DataColumn columnJobFilter;
            
            private global::System.Data.DataColumn columnEnabled;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpellTimerDataTable() {
                this.TableName = "SpellTimer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SpellTimerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SpellTimerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PanelColumn {
                get {
                    return this.columnPanel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpellTitleColumn {
                get {
                    return this.columnSpellTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KeywordColumn {
                get {
                    return this.columnKeyword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RecastTimeColumn {
                get {
                    return this.columnRecastTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RepeatEnabledColumn {
                get {
                    return this.columnRepeatEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgressBarVisibleColumn {
                get {
                    return this.columnProgressBarVisible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatchSoundColumn {
                get {
                    return this.columnMatchSound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatchTextToSpeakColumn {
                get {
                    return this.columnMatchTextToSpeak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverSoundColumn {
                get {
                    return this.columnOverSound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverTextToSpeakColumn {
                get {
                    return this.columnOverTextToSpeak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverTimeColumn {
                get {
                    return this.columnOverTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeupSoundColumn {
                get {
                    return this.columnTimeupSound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeupTextToSpeakColumn {
                get {
                    return this.columnTimeupTextToSpeak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatchDateTimeColumn {
                get {
                    return this.columnMatchDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OverDoneColumn {
                get {
                    return this.columnOverDone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeupDoneColumn {
                get {
                    return this.columnTimeupDone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimeupHideColumn {
                get {
                    return this.columnTimeupHide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsReverseColumn {
                get {
                    return this.columnIsReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FontColorColumn {
                get {
                    return this.columnFontColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BarColorColumn {
                get {
                    return this.columnBarColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DontHideColumn {
                get {
                    return this.columnDontHide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpellTitleReplacedColumn {
                get {
                    return this.columnSpellTitleReplaced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatchedLogColumn {
                get {
                    return this.columnMatchedLog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DisplayNoColumn {
                get {
                    return this.columnDisplayNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexColumn {
                get {
                    return this.columnRegex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexPatternColumn {
                get {
                    return this.columnRegexPattern;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexEnabledColumn {
                get {
                    return this.columnRegexEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobFilterColumn {
                get {
                    return this.columnJobFilter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnabledColumn {
                get {
                    return this.columnEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpellTimerRow this[int index] {
                get {
                    return ((SpellTimerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpellTimerRowChangeEventHandler SpellTimerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpellTimerRowChangeEventHandler SpellTimerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpellTimerRowChangeEventHandler SpellTimerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SpellTimerRowChangeEventHandler SpellTimerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSpellTimerRow(SpellTimerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpellTimerRow AddSpellTimerRow(
                        string Panel, 
                        string SpellTitle, 
                        string Keyword, 
                        int RecastTime, 
                        bool RepeatEnabled, 
                        bool ProgressBarVisible, 
                        string MatchSound, 
                        string MatchTextToSpeak, 
                        string OverSound, 
                        string OverTextToSpeak, 
                        int OverTime, 
                        string TimeupSound, 
                        string TimeupTextToSpeak, 
                        System.DateTime MatchDateTime, 
                        bool OverDone, 
                        bool TimeupDone, 
                        bool TimeupHide, 
                        bool IsReverse, 
                        string FontColor, 
                        string BarColor, 
                        bool DontHide, 
                        string SpellTitleReplaced, 
                        string MatchedLog, 
                        int DisplayNo, 
                        object Regex, 
                        string RegexPattern, 
                        bool RegexEnabled, 
                        string JobFilter, 
                        bool Enabled) {
                SpellTimerRow rowSpellTimerRow = ((SpellTimerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Panel,
                        SpellTitle,
                        Keyword,
                        RecastTime,
                        RepeatEnabled,
                        ProgressBarVisible,
                        MatchSound,
                        MatchTextToSpeak,
                        OverSound,
                        OverTextToSpeak,
                        OverTime,
                        TimeupSound,
                        TimeupTextToSpeak,
                        MatchDateTime,
                        OverDone,
                        TimeupDone,
                        TimeupHide,
                        IsReverse,
                        FontColor,
                        BarColor,
                        DontHide,
                        SpellTitleReplaced,
                        MatchedLog,
                        DisplayNo,
                        Regex,
                        RegexPattern,
                        RegexEnabled,
                        JobFilter,
                        Enabled};
                rowSpellTimerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSpellTimerRow);
                return rowSpellTimerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SpellTimerDataTable cln = ((SpellTimerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SpellTimerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPanel = base.Columns["Panel"];
                this.columnSpellTitle = base.Columns["SpellTitle"];
                this.columnKeyword = base.Columns["Keyword"];
                this.columnRecastTime = base.Columns["RecastTime"];
                this.columnRepeatEnabled = base.Columns["RepeatEnabled"];
                this.columnProgressBarVisible = base.Columns["ProgressBarVisible"];
                this.columnMatchSound = base.Columns["MatchSound"];
                this.columnMatchTextToSpeak = base.Columns["MatchTextToSpeak"];
                this.columnOverSound = base.Columns["OverSound"];
                this.columnOverTextToSpeak = base.Columns["OverTextToSpeak"];
                this.columnOverTime = base.Columns["OverTime"];
                this.columnTimeupSound = base.Columns["TimeupSound"];
                this.columnTimeupTextToSpeak = base.Columns["TimeupTextToSpeak"];
                this.columnMatchDateTime = base.Columns["MatchDateTime"];
                this.columnOverDone = base.Columns["OverDone"];
                this.columnTimeupDone = base.Columns["TimeupDone"];
                this.columnTimeupHide = base.Columns["TimeupHide"];
                this.columnIsReverse = base.Columns["IsReverse"];
                this.columnFontColor = base.Columns["FontColor"];
                this.columnBarColor = base.Columns["BarColor"];
                this.columnDontHide = base.Columns["DontHide"];
                this.columnSpellTitleReplaced = base.Columns["SpellTitleReplaced"];
                this.columnMatchedLog = base.Columns["MatchedLog"];
                this.columnDisplayNo = base.Columns["DisplayNo"];
                this.columnRegex = base.Columns["Regex"];
                this.columnRegexPattern = base.Columns["RegexPattern"];
                this.columnRegexEnabled = base.Columns["RegexEnabled"];
                this.columnJobFilter = base.Columns["JobFilter"];
                this.columnEnabled = base.Columns["Enabled"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPanel = new global::System.Data.DataColumn("Panel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPanel);
                this.columnSpellTitle = new global::System.Data.DataColumn("SpellTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpellTitle);
                this.columnKeyword = new global::System.Data.DataColumn("Keyword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyword);
                this.columnRecastTime = new global::System.Data.DataColumn("RecastTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecastTime);
                this.columnRepeatEnabled = new global::System.Data.DataColumn("RepeatEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepeatEnabled);
                this.columnProgressBarVisible = new global::System.Data.DataColumn("ProgressBarVisible", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgressBarVisible);
                this.columnMatchSound = new global::System.Data.DataColumn("MatchSound", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatchSound);
                this.columnMatchTextToSpeak = new global::System.Data.DataColumn("MatchTextToSpeak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatchTextToSpeak);
                this.columnOverSound = new global::System.Data.DataColumn("OverSound", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverSound);
                this.columnOverTextToSpeak = new global::System.Data.DataColumn("OverTextToSpeak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverTextToSpeak);
                this.columnOverTime = new global::System.Data.DataColumn("OverTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverTime);
                this.columnTimeupSound = new global::System.Data.DataColumn("TimeupSound", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeupSound);
                this.columnTimeupTextToSpeak = new global::System.Data.DataColumn("TimeupTextToSpeak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeupTextToSpeak);
                this.columnMatchDateTime = new global::System.Data.DataColumn("MatchDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatchDateTime);
                this.columnOverDone = new global::System.Data.DataColumn("OverDone", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOverDone);
                this.columnTimeupDone = new global::System.Data.DataColumn("TimeupDone", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeupDone);
                this.columnTimeupHide = new global::System.Data.DataColumn("TimeupHide", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeupHide);
                this.columnIsReverse = new global::System.Data.DataColumn("IsReverse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsReverse);
                this.columnFontColor = new global::System.Data.DataColumn("FontColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontColor);
                this.columnBarColor = new global::System.Data.DataColumn("BarColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBarColor);
                this.columnDontHide = new global::System.Data.DataColumn("DontHide", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDontHide);
                this.columnSpellTitleReplaced = new global::System.Data.DataColumn("SpellTitleReplaced", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpellTitleReplaced);
                this.columnMatchedLog = new global::System.Data.DataColumn("MatchedLog", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatchedLog);
                this.columnDisplayNo = new global::System.Data.DataColumn("DisplayNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayNo);
                this.columnRegex = new global::System.Data.DataColumn("Regex", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegex);
                this.columnRegexPattern = new global::System.Data.DataColumn("RegexPattern", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegexPattern);
                this.columnRegexEnabled = new global::System.Data.DataColumn("RegexEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegexEnabled);
                this.columnJobFilter = new global::System.Data.DataColumn("JobFilter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobFilter);
                this.columnEnabled = new global::System.Data.DataColumn("Enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnabled);
                this.columnPanel.AllowDBNull = false;
                this.columnPanel.DefaultValue = ((string)(""));
                this.columnSpellTitle.AllowDBNull = false;
                this.columnSpellTitle.DefaultValue = ((string)(""));
                this.columnKeyword.AllowDBNull = false;
                this.columnKeyword.DefaultValue = ((string)(""));
                this.columnRecastTime.AllowDBNull = false;
                this.columnRecastTime.DefaultValue = ((int)(0));
                this.columnRepeatEnabled.AllowDBNull = false;
                this.columnRepeatEnabled.DefaultValue = ((bool)(false));
                this.columnProgressBarVisible.AllowDBNull = false;
                this.columnProgressBarVisible.DefaultValue = ((bool)(false));
                this.columnMatchSound.AllowDBNull = false;
                this.columnMatchSound.DefaultValue = ((string)(""));
                this.columnMatchTextToSpeak.AllowDBNull = false;
                this.columnMatchTextToSpeak.DefaultValue = ((string)(""));
                this.columnOverSound.AllowDBNull = false;
                this.columnOverSound.DefaultValue = ((string)(""));
                this.columnOverTextToSpeak.AllowDBNull = false;
                this.columnOverTextToSpeak.DefaultValue = ((string)(""));
                this.columnOverTime.AllowDBNull = false;
                this.columnOverTime.DefaultValue = ((int)(0));
                this.columnTimeupSound.AllowDBNull = false;
                this.columnTimeupSound.DefaultValue = ((string)(""));
                this.columnTimeupTextToSpeak.AllowDBNull = false;
                this.columnTimeupTextToSpeak.DefaultValue = ((string)(""));
                this.columnOverDone.AllowDBNull = false;
                this.columnOverDone.DefaultValue = ((bool)(false));
                this.columnTimeupDone.AllowDBNull = false;
                this.columnTimeupDone.DefaultValue = ((bool)(false));
                this.columnTimeupHide.AllowDBNull = false;
                this.columnTimeupHide.DefaultValue = ((bool)(false));
                this.columnIsReverse.AllowDBNull = false;
                this.columnIsReverse.DefaultValue = ((bool)(false));
                this.columnFontColor.AllowDBNull = false;
                this.columnFontColor.DefaultValue = ((string)(""));
                this.columnBarColor.AllowDBNull = false;
                this.columnBarColor.DefaultValue = ((string)(""));
                this.columnDontHide.AllowDBNull = false;
                this.columnDontHide.DefaultValue = ((bool)(false));
                this.columnSpellTitleReplaced.AllowDBNull = false;
                this.columnSpellTitleReplaced.DefaultValue = ((string)(""));
                this.columnMatchedLog.AllowDBNull = false;
                this.columnMatchedLog.DefaultValue = ((string)(""));
                this.columnDisplayNo.AllowDBNull = false;
                this.columnDisplayNo.DefaultValue = ((int)(0));
                this.columnRegexPattern.AllowDBNull = false;
                this.columnRegexPattern.DefaultValue = ((string)(""));
                this.columnRegexEnabled.AllowDBNull = false;
                this.columnRegexEnabled.DefaultValue = ((bool)(false));
                this.columnJobFilter.AllowDBNull = false;
                this.columnJobFilter.DefaultValue = ((string)(""));
                this.columnEnabled.AllowDBNull = false;
                this.columnEnabled.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpellTimerRow NewSpellTimerRow() {
                return ((SpellTimerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SpellTimerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SpellTimerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SpellTimerRowChanged != null)) {
                    this.SpellTimerRowChanged(this, new SpellTimerRowChangeEvent(((SpellTimerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SpellTimerRowChanging != null)) {
                    this.SpellTimerRowChanging(this, new SpellTimerRowChangeEvent(((SpellTimerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SpellTimerRowDeleted != null)) {
                    this.SpellTimerRowDeleted(this, new SpellTimerRowChangeEvent(((SpellTimerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SpellTimerRowDeleting != null)) {
                    this.SpellTimerRowDeleting(this, new SpellTimerRowChangeEvent(((SpellTimerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSpellTimerRow(SpellTimerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SpellTimerDataSet ds = new SpellTimerDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SpellTimerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PanelSettingsDataTable : global::System.Data.TypedTableBase<PanelSettingsRow> {
            
            private global::System.Data.DataColumn columnPanelName;
            
            private global::System.Data.DataColumn columnLeft;
            
            private global::System.Data.DataColumn columnTop;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanelSettingsDataTable() {
                this.TableName = "PanelSettings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanelSettingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PanelSettingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PanelNameColumn {
                get {
                    return this.columnPanelName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LeftColumn {
                get {
                    return this.columnLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TopColumn {
                get {
                    return this.columnTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanelSettingsRow this[int index] {
                get {
                    return ((PanelSettingsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanelSettingsRowChangeEventHandler PanelSettingsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanelSettingsRowChangeEventHandler PanelSettingsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanelSettingsRowChangeEventHandler PanelSettingsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PanelSettingsRowChangeEventHandler PanelSettingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPanelSettingsRow(PanelSettingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanelSettingsRow AddPanelSettingsRow(string PanelName, double Left, double Top) {
                PanelSettingsRow rowPanelSettingsRow = ((PanelSettingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PanelName,
                        Left,
                        Top};
                rowPanelSettingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPanelSettingsRow);
                return rowPanelSettingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PanelSettingsDataTable cln = ((PanelSettingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PanelSettingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPanelName = base.Columns["PanelName"];
                this.columnLeft = base.Columns["Left"];
                this.columnTop = base.Columns["Top"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPanelName = new global::System.Data.DataColumn("PanelName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPanelName);
                this.columnLeft = new global::System.Data.DataColumn("Left", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeft);
                this.columnTop = new global::System.Data.DataColumn("Top", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTop);
                this.columnPanelName.AllowDBNull = false;
                this.columnPanelName.DefaultValue = ((string)(""));
                this.columnLeft.AllowDBNull = false;
                this.columnLeft.DefaultValue = ((double)(0D));
                this.columnTop.AllowDBNull = false;
                this.columnTop.DefaultValue = ((double)(0D));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanelSettingsRow NewPanelSettingsRow() {
                return ((PanelSettingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PanelSettingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PanelSettingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PanelSettingsRowChanged != null)) {
                    this.PanelSettingsRowChanged(this, new PanelSettingsRowChangeEvent(((PanelSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PanelSettingsRowChanging != null)) {
                    this.PanelSettingsRowChanging(this, new PanelSettingsRowChangeEvent(((PanelSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PanelSettingsRowDeleted != null)) {
                    this.PanelSettingsRowDeleted(this, new PanelSettingsRowChangeEvent(((PanelSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PanelSettingsRowDeleting != null)) {
                    this.PanelSettingsRowDeleting(this, new PanelSettingsRowChangeEvent(((PanelSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePanelSettingsRow(PanelSettingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SpellTimerDataSet ds = new SpellTimerDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PanelSettingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OnePointTelopDataTable : global::System.Data.TypedTableBase<OnePointTelopRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnKeyword;
            
            private global::System.Data.DataColumn columnKeywordToHide;
            
            private global::System.Data.DataColumn columnMessage;
            
            private global::System.Data.DataColumn columnDelay;
            
            private global::System.Data.DataColumn columnDisplayTime;
            
            private global::System.Data.DataColumn columnAddMessageEnabled;
            
            private global::System.Data.DataColumn columnProgressBarEnabled;
            
            private global::System.Data.DataColumn columnMatchSound;
            
            private global::System.Data.DataColumn columnMatchTextToSpeak;
            
            private global::System.Data.DataColumn columnDelaySound;
            
            private global::System.Data.DataColumn columnDelayTextToSpeak;
            
            private global::System.Data.DataColumn columnDelayed;
            
            private global::System.Data.DataColumn columnBackColor;
            
            private global::System.Data.DataColumn columnFontFamily;
            
            private global::System.Data.DataColumn columnFontSize;
            
            private global::System.Data.DataColumn columnFontStyle;
            
            private global::System.Data.DataColumn columnFontColor;
            
            private global::System.Data.DataColumn columnMatchDateTime;
            
            private global::System.Data.DataColumn columnMatchedLog;
            
            private global::System.Data.DataColumn columnMessageReplaced;
            
            private global::System.Data.DataColumn columnRegex;
            
            private global::System.Data.DataColumn columnRegexToHide;
            
            private global::System.Data.DataColumn columnRegexPattern;
            
            private global::System.Data.DataColumn columnRegexPatternToHide;
            
            private global::System.Data.DataColumn columnRegexEnabled;
            
            private global::System.Data.DataColumn columnLeft;
            
            private global::System.Data.DataColumn columnTop;
            
            private global::System.Data.DataColumn columnJobFilter;
            
            private global::System.Data.DataColumn columnEnabled;
            
            private static System.DateTime columnMatchDateTime_defaultValue = global::System.DateTime.Parse("0001-01-01T00:00:00");
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OnePointTelopDataTable() {
                this.TableName = "OnePointTelop";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OnePointTelopDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OnePointTelopDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KeywordColumn {
                get {
                    return this.columnKeyword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KeywordToHideColumn {
                get {
                    return this.columnKeywordToHide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelayColumn {
                get {
                    return this.columnDelay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DisplayTimeColumn {
                get {
                    return this.columnDisplayTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddMessageEnabledColumn {
                get {
                    return this.columnAddMessageEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgressBarEnabledColumn {
                get {
                    return this.columnProgressBarEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatchSoundColumn {
                get {
                    return this.columnMatchSound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatchTextToSpeakColumn {
                get {
                    return this.columnMatchTextToSpeak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelaySoundColumn {
                get {
                    return this.columnDelaySound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelayTextToSpeakColumn {
                get {
                    return this.columnDelayTextToSpeak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelayedColumn {
                get {
                    return this.columnDelayed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BackColorColumn {
                get {
                    return this.columnBackColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FontFamilyColumn {
                get {
                    return this.columnFontFamily;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FontSizeColumn {
                get {
                    return this.columnFontSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FontStyleColumn {
                get {
                    return this.columnFontStyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FontColorColumn {
                get {
                    return this.columnFontColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatchDateTimeColumn {
                get {
                    return this.columnMatchDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatchedLogColumn {
                get {
                    return this.columnMatchedLog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MessageReplacedColumn {
                get {
                    return this.columnMessageReplaced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexColumn {
                get {
                    return this.columnRegex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexToHideColumn {
                get {
                    return this.columnRegexToHide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexPatternColumn {
                get {
                    return this.columnRegexPattern;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexPatternToHideColumn {
                get {
                    return this.columnRegexPatternToHide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegexEnabledColumn {
                get {
                    return this.columnRegexEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LeftColumn {
                get {
                    return this.columnLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TopColumn {
                get {
                    return this.columnTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JobFilterColumn {
                get {
                    return this.columnJobFilter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnabledColumn {
                get {
                    return this.columnEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OnePointTelopRow this[int index] {
                get {
                    return ((OnePointTelopRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OnePointTelopRowChangeEventHandler OnePointTelopRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OnePointTelopRowChangeEventHandler OnePointTelopRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OnePointTelopRowChangeEventHandler OnePointTelopRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OnePointTelopRowChangeEventHandler OnePointTelopRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOnePointTelopRow(OnePointTelopRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OnePointTelopRow AddOnePointTelopRow(
                        long ID, 
                        string Title, 
                        string Keyword, 
                        string KeywordToHide, 
                        string Message, 
                        long Delay, 
                        long DisplayTime, 
                        bool AddMessageEnabled, 
                        bool ProgressBarEnabled, 
                        string MatchSound, 
                        string MatchTextToSpeak, 
                        string DelaySound, 
                        string DelayTextToSpeak, 
                        bool Delayed, 
                        string BackColor, 
                        string FontFamily, 
                        float FontSize, 
                        int FontStyle, 
                        string FontColor, 
                        System.DateTime MatchDateTime, 
                        string MatchedLog, 
                        string MessageReplaced, 
                        object Regex, 
                        object RegexToHide, 
                        string RegexPattern, 
                        string RegexPatternToHide, 
                        bool RegexEnabled, 
                        double Left, 
                        double Top, 
                        string JobFilter, 
                        bool Enabled) {
                OnePointTelopRow rowOnePointTelopRow = ((OnePointTelopRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Title,
                        Keyword,
                        KeywordToHide,
                        Message,
                        Delay,
                        DisplayTime,
                        AddMessageEnabled,
                        ProgressBarEnabled,
                        MatchSound,
                        MatchTextToSpeak,
                        DelaySound,
                        DelayTextToSpeak,
                        Delayed,
                        BackColor,
                        FontFamily,
                        FontSize,
                        FontStyle,
                        FontColor,
                        MatchDateTime,
                        MatchedLog,
                        MessageReplaced,
                        Regex,
                        RegexToHide,
                        RegexPattern,
                        RegexPatternToHide,
                        RegexEnabled,
                        Left,
                        Top,
                        JobFilter,
                        Enabled};
                rowOnePointTelopRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOnePointTelopRow);
                return rowOnePointTelopRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OnePointTelopDataTable cln = ((OnePointTelopDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OnePointTelopDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTitle = base.Columns["Title"];
                this.columnKeyword = base.Columns["Keyword"];
                this.columnKeywordToHide = base.Columns["KeywordToHide"];
                this.columnMessage = base.Columns["Message"];
                this.columnDelay = base.Columns["Delay"];
                this.columnDisplayTime = base.Columns["DisplayTime"];
                this.columnAddMessageEnabled = base.Columns["AddMessageEnabled"];
                this.columnProgressBarEnabled = base.Columns["ProgressBarEnabled"];
                this.columnMatchSound = base.Columns["MatchSound"];
                this.columnMatchTextToSpeak = base.Columns["MatchTextToSpeak"];
                this.columnDelaySound = base.Columns["DelaySound"];
                this.columnDelayTextToSpeak = base.Columns["DelayTextToSpeak"];
                this.columnDelayed = base.Columns["Delayed"];
                this.columnBackColor = base.Columns["BackColor"];
                this.columnFontFamily = base.Columns["FontFamily"];
                this.columnFontSize = base.Columns["FontSize"];
                this.columnFontStyle = base.Columns["FontStyle"];
                this.columnFontColor = base.Columns["FontColor"];
                this.columnMatchDateTime = base.Columns["MatchDateTime"];
                this.columnMatchedLog = base.Columns["MatchedLog"];
                this.columnMessageReplaced = base.Columns["MessageReplaced"];
                this.columnRegex = base.Columns["Regex"];
                this.columnRegexToHide = base.Columns["RegexToHide"];
                this.columnRegexPattern = base.Columns["RegexPattern"];
                this.columnRegexPatternToHide = base.Columns["RegexPatternToHide"];
                this.columnRegexEnabled = base.Columns["RegexEnabled"];
                this.columnLeft = base.Columns["Left"];
                this.columnTop = base.Columns["Top"];
                this.columnJobFilter = base.Columns["JobFilter"];
                this.columnEnabled = base.Columns["Enabled"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnKeyword = new global::System.Data.DataColumn("Keyword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyword);
                this.columnKeywordToHide = new global::System.Data.DataColumn("KeywordToHide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeywordToHide);
                this.columnMessage = new global::System.Data.DataColumn("Message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage);
                this.columnDelay = new global::System.Data.DataColumn("Delay", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelay);
                this.columnDisplayTime = new global::System.Data.DataColumn("DisplayTime", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayTime);
                this.columnAddMessageEnabled = new global::System.Data.DataColumn("AddMessageEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddMessageEnabled);
                this.columnProgressBarEnabled = new global::System.Data.DataColumn("ProgressBarEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgressBarEnabled);
                this.columnMatchSound = new global::System.Data.DataColumn("MatchSound", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatchSound);
                this.columnMatchTextToSpeak = new global::System.Data.DataColumn("MatchTextToSpeak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatchTextToSpeak);
                this.columnDelaySound = new global::System.Data.DataColumn("DelaySound", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelaySound);
                this.columnDelayTextToSpeak = new global::System.Data.DataColumn("DelayTextToSpeak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelayTextToSpeak);
                this.columnDelayed = new global::System.Data.DataColumn("Delayed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelayed);
                this.columnBackColor = new global::System.Data.DataColumn("BackColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBackColor);
                this.columnFontFamily = new global::System.Data.DataColumn("FontFamily", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontFamily);
                this.columnFontSize = new global::System.Data.DataColumn("FontSize", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontSize);
                this.columnFontStyle = new global::System.Data.DataColumn("FontStyle", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontStyle);
                this.columnFontColor = new global::System.Data.DataColumn("FontColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFontColor);
                this.columnMatchDateTime = new global::System.Data.DataColumn("MatchDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatchDateTime);
                this.columnMatchedLog = new global::System.Data.DataColumn("MatchedLog", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatchedLog);
                this.columnMessageReplaced = new global::System.Data.DataColumn("MessageReplaced", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageReplaced);
                this.columnRegex = new global::System.Data.DataColumn("Regex", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegex);
                this.columnRegexToHide = new global::System.Data.DataColumn("RegexToHide", typeof(object), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegexToHide);
                this.columnRegexPattern = new global::System.Data.DataColumn("RegexPattern", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegexPattern);
                this.columnRegexPatternToHide = new global::System.Data.DataColumn("RegexPatternToHide", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegexPatternToHide);
                this.columnRegexEnabled = new global::System.Data.DataColumn("RegexEnabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegexEnabled);
                this.columnLeft = new global::System.Data.DataColumn("Left", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeft);
                this.columnTop = new global::System.Data.DataColumn("Top", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTop);
                this.columnJobFilter = new global::System.Data.DataColumn("JobFilter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobFilter);
                this.columnEnabled = new global::System.Data.DataColumn("Enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnabled);
                this.columnID.AllowDBNull = false;
                this.columnID.DefaultValue = ((long)(0));
                this.columnTitle.AllowDBNull = false;
                this.columnTitle.DefaultValue = ((string)(""));
                this.columnKeyword.AllowDBNull = false;
                this.columnKeyword.DefaultValue = ((string)(""));
                this.columnKeywordToHide.AllowDBNull = false;
                this.columnKeywordToHide.DefaultValue = ((string)(""));
                this.columnMessage.AllowDBNull = false;
                this.columnMessage.DefaultValue = ((string)(""));
                this.columnDelay.AllowDBNull = false;
                this.columnDelay.DefaultValue = ((long)(0));
                this.columnDisplayTime.AllowDBNull = false;
                this.columnDisplayTime.Caption = "DelayAutoHide";
                this.columnDisplayTime.DefaultValue = ((long)(0));
                this.columnAddMessageEnabled.AllowDBNull = false;
                this.columnAddMessageEnabled.DefaultValue = ((bool)(false));
                this.columnProgressBarEnabled.AllowDBNull = false;
                this.columnProgressBarEnabled.DefaultValue = ((bool)(false));
                this.columnMatchSound.AllowDBNull = false;
                this.columnMatchSound.DefaultValue = ((string)(""));
                this.columnMatchTextToSpeak.AllowDBNull = false;
                this.columnMatchTextToSpeak.DefaultValue = ((string)(""));
                this.columnDelaySound.AllowDBNull = false;
                this.columnDelaySound.DefaultValue = ((string)(""));
                this.columnDelayTextToSpeak.AllowDBNull = false;
                this.columnDelayTextToSpeak.DefaultValue = ((string)(""));
                this.columnDelayed.AllowDBNull = false;
                this.columnDelayed.DefaultValue = ((bool)(false));
                this.columnBackColor.AllowDBNull = false;
                this.columnBackColor.DefaultValue = ((string)(""));
                this.columnFontFamily.AllowDBNull = false;
                this.columnFontFamily.DefaultValue = ((string)(""));
                this.columnFontSize.AllowDBNull = false;
                this.columnFontSize.DefaultValue = ((float)(0F));
                this.columnFontStyle.AllowDBNull = false;
                this.columnFontStyle.DefaultValue = ((int)(0));
                this.columnFontColor.AllowDBNull = false;
                this.columnFontColor.DefaultValue = ((string)(""));
                this.columnMatchDateTime.AllowDBNull = false;
                this.columnMatchDateTime.DefaultValue = ((System.DateTime)(OnePointTelopDataTable.columnMatchDateTime_defaultValue));
                this.columnMatchedLog.AllowDBNull = false;
                this.columnMatchedLog.DefaultValue = ((string)(""));
                this.columnMessageReplaced.AllowDBNull = false;
                this.columnMessageReplaced.DefaultValue = ((string)(""));
                this.columnRegexToHide.Caption = "Regex";
                this.columnRegexPattern.AllowDBNull = false;
                this.columnRegexPattern.DefaultValue = ((string)(""));
                this.columnRegexPatternToHide.AllowDBNull = false;
                this.columnRegexPatternToHide.Caption = "RegexPattern";
                this.columnRegexPatternToHide.DefaultValue = ((string)(""));
                this.columnRegexEnabled.DefaultValue = ((bool)(false));
                this.columnLeft.AllowDBNull = false;
                this.columnLeft.DefaultValue = ((double)(0D));
                this.columnTop.AllowDBNull = false;
                this.columnTop.DefaultValue = ((double)(0D));
                this.columnJobFilter.AllowDBNull = false;
                this.columnJobFilter.DefaultValue = ((string)(""));
                this.columnEnabled.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OnePointTelopRow NewOnePointTelopRow() {
                return ((OnePointTelopRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OnePointTelopRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OnePointTelopRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OnePointTelopRowChanged != null)) {
                    this.OnePointTelopRowChanged(this, new OnePointTelopRowChangeEvent(((OnePointTelopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OnePointTelopRowChanging != null)) {
                    this.OnePointTelopRowChanging(this, new OnePointTelopRowChangeEvent(((OnePointTelopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OnePointTelopRowDeleted != null)) {
                    this.OnePointTelopRowDeleted(this, new OnePointTelopRowChangeEvent(((OnePointTelopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OnePointTelopRowDeleting != null)) {
                    this.OnePointTelopRowDeleting(this, new OnePointTelopRowChangeEvent(((OnePointTelopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOnePointTelopRow(OnePointTelopRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SpellTimerDataSet ds = new SpellTimerDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OnePointTelopDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SpellTimerRow : global::System.Data.DataRow {
            
            private SpellTimerDataTable tableSpellTimer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SpellTimerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSpellTimer = ((SpellTimerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Panel {
                get {
                    return ((string)(this[this.tableSpellTimer.PanelColumn]));
                }
                set {
                    this[this.tableSpellTimer.PanelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpellTitle {
                get {
                    return ((string)(this[this.tableSpellTimer.SpellTitleColumn]));
                }
                set {
                    this[this.tableSpellTimer.SpellTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Keyword {
                get {
                    return ((string)(this[this.tableSpellTimer.KeywordColumn]));
                }
                set {
                    this[this.tableSpellTimer.KeywordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RecastTime {
                get {
                    return ((int)(this[this.tableSpellTimer.RecastTimeColumn]));
                }
                set {
                    this[this.tableSpellTimer.RecastTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RepeatEnabled {
                get {
                    return ((bool)(this[this.tableSpellTimer.RepeatEnabledColumn]));
                }
                set {
                    this[this.tableSpellTimer.RepeatEnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ProgressBarVisible {
                get {
                    return ((bool)(this[this.tableSpellTimer.ProgressBarVisibleColumn]));
                }
                set {
                    this[this.tableSpellTimer.ProgressBarVisibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MatchSound {
                get {
                    return ((string)(this[this.tableSpellTimer.MatchSoundColumn]));
                }
                set {
                    this[this.tableSpellTimer.MatchSoundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MatchTextToSpeak {
                get {
                    return ((string)(this[this.tableSpellTimer.MatchTextToSpeakColumn]));
                }
                set {
                    this[this.tableSpellTimer.MatchTextToSpeakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OverSound {
                get {
                    return ((string)(this[this.tableSpellTimer.OverSoundColumn]));
                }
                set {
                    this[this.tableSpellTimer.OverSoundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OverTextToSpeak {
                get {
                    return ((string)(this[this.tableSpellTimer.OverTextToSpeakColumn]));
                }
                set {
                    this[this.tableSpellTimer.OverTextToSpeakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OverTime {
                get {
                    return ((int)(this[this.tableSpellTimer.OverTimeColumn]));
                }
                set {
                    this[this.tableSpellTimer.OverTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TimeupSound {
                get {
                    return ((string)(this[this.tableSpellTimer.TimeupSoundColumn]));
                }
                set {
                    this[this.tableSpellTimer.TimeupSoundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TimeupTextToSpeak {
                get {
                    return ((string)(this[this.tableSpellTimer.TimeupTextToSpeakColumn]));
                }
                set {
                    this[this.tableSpellTimer.TimeupTextToSpeakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MatchDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSpellTimer.MatchDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("テーブル \'SpellTimer\' にある列 \'MatchDateTime\' の値は DBNull です。", e);
                    }
                }
                set {
                    this[this.tableSpellTimer.MatchDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OverDone {
                get {
                    return ((bool)(this[this.tableSpellTimer.OverDoneColumn]));
                }
                set {
                    this[this.tableSpellTimer.OverDoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TimeupDone {
                get {
                    return ((bool)(this[this.tableSpellTimer.TimeupDoneColumn]));
                }
                set {
                    this[this.tableSpellTimer.TimeupDoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TimeupHide {
                get {
                    return ((bool)(this[this.tableSpellTimer.TimeupHideColumn]));
                }
                set {
                    this[this.tableSpellTimer.TimeupHideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReverse {
                get {
                    return ((bool)(this[this.tableSpellTimer.IsReverseColumn]));
                }
                set {
                    this[this.tableSpellTimer.IsReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FontColor {
                get {
                    return ((string)(this[this.tableSpellTimer.FontColorColumn]));
                }
                set {
                    this[this.tableSpellTimer.FontColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BarColor {
                get {
                    return ((string)(this[this.tableSpellTimer.BarColorColumn]));
                }
                set {
                    this[this.tableSpellTimer.BarColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DontHide {
                get {
                    return ((bool)(this[this.tableSpellTimer.DontHideColumn]));
                }
                set {
                    this[this.tableSpellTimer.DontHideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SpellTitleReplaced {
                get {
                    return ((string)(this[this.tableSpellTimer.SpellTitleReplacedColumn]));
                }
                set {
                    this[this.tableSpellTimer.SpellTitleReplacedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MatchedLog {
                get {
                    return ((string)(this[this.tableSpellTimer.MatchedLogColumn]));
                }
                set {
                    this[this.tableSpellTimer.MatchedLogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DisplayNo {
                get {
                    return ((int)(this[this.tableSpellTimer.DisplayNoColumn]));
                }
                set {
                    this[this.tableSpellTimer.DisplayNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public object Regex {
                get {
                    if (this.IsRegexNull()) {
                        return null;
                    }
                    else {
                        return ((object)(this[this.tableSpellTimer.RegexColumn]));
                    }
                }
                set {
                    this[this.tableSpellTimer.RegexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RegexPattern {
                get {
                    return ((string)(this[this.tableSpellTimer.RegexPatternColumn]));
                }
                set {
                    this[this.tableSpellTimer.RegexPatternColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RegexEnabled {
                get {
                    return ((bool)(this[this.tableSpellTimer.RegexEnabledColumn]));
                }
                set {
                    this[this.tableSpellTimer.RegexEnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobFilter {
                get {
                    return ((string)(this[this.tableSpellTimer.JobFilterColumn]));
                }
                set {
                    this[this.tableSpellTimer.JobFilterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Enabled {
                get {
                    return ((bool)(this[this.tableSpellTimer.EnabledColumn]));
                }
                set {
                    this[this.tableSpellTimer.EnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMatchDateTimeNull() {
                return this.IsNull(this.tableSpellTimer.MatchDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMatchDateTimeNull() {
                this[this.tableSpellTimer.MatchDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegexNull() {
                return this.IsNull(this.tableSpellTimer.RegexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegexNull() {
                this[this.tableSpellTimer.RegexColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PanelSettingsRow : global::System.Data.DataRow {
            
            private PanelSettingsDataTable tablePanelSettings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PanelSettingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePanelSettings = ((PanelSettingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PanelName {
                get {
                    return ((string)(this[this.tablePanelSettings.PanelNameColumn]));
                }
                set {
                    this[this.tablePanelSettings.PanelNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Left {
                get {
                    return ((double)(this[this.tablePanelSettings.LeftColumn]));
                }
                set {
                    this[this.tablePanelSettings.LeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Top {
                get {
                    return ((double)(this[this.tablePanelSettings.TopColumn]));
                }
                set {
                    this[this.tablePanelSettings.TopColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OnePointTelopRow : global::System.Data.DataRow {
            
            private OnePointTelopDataTable tableOnePointTelop;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OnePointTelopRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOnePointTelop = ((OnePointTelopDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ID {
                get {
                    return ((long)(this[this.tableOnePointTelop.IDColumn]));
                }
                set {
                    this[this.tableOnePointTelop.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    return ((string)(this[this.tableOnePointTelop.TitleColumn]));
                }
                set {
                    this[this.tableOnePointTelop.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Keyword {
                get {
                    return ((string)(this[this.tableOnePointTelop.KeywordColumn]));
                }
                set {
                    this[this.tableOnePointTelop.KeywordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KeywordToHide {
                get {
                    return ((string)(this[this.tableOnePointTelop.KeywordToHideColumn]));
                }
                set {
                    this[this.tableOnePointTelop.KeywordToHideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Message {
                get {
                    return ((string)(this[this.tableOnePointTelop.MessageColumn]));
                }
                set {
                    this[this.tableOnePointTelop.MessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Delay {
                get {
                    return ((long)(this[this.tableOnePointTelop.DelayColumn]));
                }
                set {
                    this[this.tableOnePointTelop.DelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DisplayTime {
                get {
                    return ((long)(this[this.tableOnePointTelop.DisplayTimeColumn]));
                }
                set {
                    this[this.tableOnePointTelop.DisplayTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AddMessageEnabled {
                get {
                    return ((bool)(this[this.tableOnePointTelop.AddMessageEnabledColumn]));
                }
                set {
                    this[this.tableOnePointTelop.AddMessageEnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ProgressBarEnabled {
                get {
                    return ((bool)(this[this.tableOnePointTelop.ProgressBarEnabledColumn]));
                }
                set {
                    this[this.tableOnePointTelop.ProgressBarEnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MatchSound {
                get {
                    return ((string)(this[this.tableOnePointTelop.MatchSoundColumn]));
                }
                set {
                    this[this.tableOnePointTelop.MatchSoundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MatchTextToSpeak {
                get {
                    return ((string)(this[this.tableOnePointTelop.MatchTextToSpeakColumn]));
                }
                set {
                    this[this.tableOnePointTelop.MatchTextToSpeakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DelaySound {
                get {
                    return ((string)(this[this.tableOnePointTelop.DelaySoundColumn]));
                }
                set {
                    this[this.tableOnePointTelop.DelaySoundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DelayTextToSpeak {
                get {
                    return ((string)(this[this.tableOnePointTelop.DelayTextToSpeakColumn]));
                }
                set {
                    this[this.tableOnePointTelop.DelayTextToSpeakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Delayed {
                get {
                    return ((bool)(this[this.tableOnePointTelop.DelayedColumn]));
                }
                set {
                    this[this.tableOnePointTelop.DelayedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BackColor {
                get {
                    return ((string)(this[this.tableOnePointTelop.BackColorColumn]));
                }
                set {
                    this[this.tableOnePointTelop.BackColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FontFamily {
                get {
                    return ((string)(this[this.tableOnePointTelop.FontFamilyColumn]));
                }
                set {
                    this[this.tableOnePointTelop.FontFamilyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float FontSize {
                get {
                    return ((float)(this[this.tableOnePointTelop.FontSizeColumn]));
                }
                set {
                    this[this.tableOnePointTelop.FontSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FontStyle {
                get {
                    return ((int)(this[this.tableOnePointTelop.FontStyleColumn]));
                }
                set {
                    this[this.tableOnePointTelop.FontStyleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FontColor {
                get {
                    return ((string)(this[this.tableOnePointTelop.FontColorColumn]));
                }
                set {
                    this[this.tableOnePointTelop.FontColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MatchDateTime {
                get {
                    return ((global::System.DateTime)(this[this.tableOnePointTelop.MatchDateTimeColumn]));
                }
                set {
                    this[this.tableOnePointTelop.MatchDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MatchedLog {
                get {
                    return ((string)(this[this.tableOnePointTelop.MatchedLogColumn]));
                }
                set {
                    this[this.tableOnePointTelop.MatchedLogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MessageReplaced {
                get {
                    return ((string)(this[this.tableOnePointTelop.MessageReplacedColumn]));
                }
                set {
                    this[this.tableOnePointTelop.MessageReplacedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public object Regex {
                get {
                    if (this.IsRegexNull()) {
                        return null;
                    }
                    else {
                        return ((object)(this[this.tableOnePointTelop.RegexColumn]));
                    }
                }
                set {
                    this[this.tableOnePointTelop.RegexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public object RegexToHide {
                get {
                    if (this.IsRegexToHideNull()) {
                        return null;
                    }
                    else {
                        return ((object)(this[this.tableOnePointTelop.RegexToHideColumn]));
                    }
                }
                set {
                    this[this.tableOnePointTelop.RegexToHideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RegexPattern {
                get {
                    return ((string)(this[this.tableOnePointTelop.RegexPatternColumn]));
                }
                set {
                    this[this.tableOnePointTelop.RegexPatternColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RegexPatternToHide {
                get {
                    return ((string)(this[this.tableOnePointTelop.RegexPatternToHideColumn]));
                }
                set {
                    this[this.tableOnePointTelop.RegexPatternToHideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RegexEnabled {
                get {
                    if (this.IsRegexEnabledNull()) {
                        return false;
                    }
                    else {
                        return ((bool)(this[this.tableOnePointTelop.RegexEnabledColumn]));
                    }
                }
                set {
                    this[this.tableOnePointTelop.RegexEnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Left {
                get {
                    return ((double)(this[this.tableOnePointTelop.LeftColumn]));
                }
                set {
                    this[this.tableOnePointTelop.LeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Top {
                get {
                    return ((double)(this[this.tableOnePointTelop.TopColumn]));
                }
                set {
                    this[this.tableOnePointTelop.TopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JobFilter {
                get {
                    return ((string)(this[this.tableOnePointTelop.JobFilterColumn]));
                }
                set {
                    this[this.tableOnePointTelop.JobFilterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Enabled {
                get {
                    if (this.IsEnabledNull()) {
                        return false;
                    }
                    else {
                        return ((bool)(this[this.tableOnePointTelop.EnabledColumn]));
                    }
                }
                set {
                    this[this.tableOnePointTelop.EnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegexNull() {
                return this.IsNull(this.tableOnePointTelop.RegexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegexNull() {
                this[this.tableOnePointTelop.RegexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegexToHideNull() {
                return this.IsNull(this.tableOnePointTelop.RegexToHideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegexToHideNull() {
                this[this.tableOnePointTelop.RegexToHideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegexEnabledNull() {
                return this.IsNull(this.tableOnePointTelop.RegexEnabledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegexEnabledNull() {
                this[this.tableOnePointTelop.RegexEnabledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnabledNull() {
                return this.IsNull(this.tableOnePointTelop.EnabledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnabledNull() {
                this[this.tableOnePointTelop.EnabledColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SpellTimerRowChangeEvent : global::System.EventArgs {
            
            private SpellTimerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpellTimerRowChangeEvent(SpellTimerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SpellTimerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PanelSettingsRowChangeEvent : global::System.EventArgs {
            
            private PanelSettingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanelSettingsRowChangeEvent(PanelSettingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PanelSettingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OnePointTelopRowChangeEvent : global::System.EventArgs {
            
            private OnePointTelopRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OnePointTelopRowChangeEvent(OnePointTelopRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OnePointTelopRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591